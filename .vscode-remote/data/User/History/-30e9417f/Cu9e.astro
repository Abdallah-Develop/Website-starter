---
// Import the necessary dependencies
import { Image } from "astro:assets"
import PrimaryCTA from "@components/ui/buttons/PrimaryCTA.astro"
import ReviewComponent from "@components/ui/blocks/ReviewComponent.astro"
import GradientCircle from "@components/GradientCircle.astro"
import Lines from "@components/Lines.astro"
import Badge from "@components/Badge.astro"

// Define props from Astro
const {
  title,
  subTitle,
  primaryBtn,
  primaryBtnURL,
  secondaryBtn,
  secondaryBtnURL,
  withReview,
  avatars,
  starCount,
  rating,
  reviews,
  src,
  alt,
} = Astro.props

// Define TypeScript interface for props
interface Props {
  title: string
  subTitle?: string
  primaryBtn?: string
  primaryBtnURL?: string
  secondaryBtn?: string
  secondaryBtnURL?: string
  withReview?: boolean
  avatars?: Array<string>
  starCount?: number
  rating?: string
  reviews?: string
  src?: any
  alt?: string
}
---

<!-- Defining a grid container that holds all the content -->
<section
  class="relative mx-auto mt-18 grid max-w-[85rem] gap-4 overflow-hidden rounded-xl bg-amber-400 pt-16 md:h-[calc(100vh-11rem)] md:grid-cols-1 md:items-end md:gap-8 md:bg-neutral-100 md:p-4 lg:p-6 2xl:max-w-full"
>
  <!--
  <div class="pointer-events-none absolute h-[200%] w-2/3">
    <GradientCircle />
    <Lines
      class="top-146 -left-20"
      linesColor="#00ffff33"
      style={{
        mask: "radial-gradient(circle at 40% 550px, black 50%, transparent 70%)",
      }}
    />
  </div>

  <div class="relative z-3 flex flex-col items-start justify-center text-start">
    <Badge
      variant="transparent"
      text="89% filled their schedule in 14 days"
      LeftIcon="checkCircleStroke"
    /> -->
  <!-- Each h1 and p tag renders a portion of the title and subTitle defined above -->
  <!-- <h1
      class="atyp mt-3 block text-[2.75rem] leading-none font-medium tracking-tight text-balance text-white lg:text-6xl"
    >
      <Fragment set:html={title} />
    </h1>
    {
      subTitle && (
        <p class="inter mt-4 text-xl leading-6 text-balance text-neutral-600 md:text-xl md:text-white">
          {subTitle}
        </p>
      )
    }

    <div class="mt-8 grid w-full gap-3 sm:inline-flex">
      {
        primaryBtn && (
          <PrimaryCTA variant="white" title={primaryBtn} url={primaryBtnURL} />
        )
      }
    </div>

    {
      withReview ? (
        <ReviewComponent
          avatars={avatars}
          starCount={starCount}
          rating={rating}
          reviews={reviews}
        />
      ) : (
        ""
      )
    }
  </div>
 -->
  <!-- Hero Image Section -->
  <div class="flex items-center justify-center">
    <!--<div class="top-12 overflow-hidden">
      {
        src && alt && (
          <Image
            src={src}
            alt={alt}
            class="h-full w-full scale-120 object-cover object-center"
            draggable={"false"}
            loading={"eager"}
            format={"avif"}
          />
        )
      }
    </div> -->

    <div class="bg-primary/10 relative h-[30rem] w-3/4 rounded-xl p-4"
      style={{ "box-shadow": "inset 0px 0px 20px 50px #00ffff22" }}
    >
    <!--<div class="bg-secondary/30 absolute bottom-0 left-24 h-44 w-44 rounded-full"></div> -->
    <div class="h-full w-full flex items-center justify-center rounded-xl border border-white/30 bg-white/10 backdrop-blur-md">
      <div class="w-2/5 h-full rounded-xl border border-white/50 bg-white/10"></div>
      <div class="w"></div>
    </div>
  </div>
</section>
